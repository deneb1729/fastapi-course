from fastapi import FastAPI
from typing import Optional
from pydantic import BaseModel
import uvicorn

app = FastAPI()


@app.get("/")
def index():
    return "hello human"


@app.get("/about")
def index():
    return {"data": ["about page"]}


@app.get("/blog")
def blogs(limit:int = 10, published:bool = True, sort: Optional[str]=None):
    if published:
        return {"data": f"{limit} published blogs"}
    else:
        return {"data": f"{limit} unpublished blogs"}


@app.get("/blog/unplublished")
def unplublished_blogs():
    return {"data": "all unplublished blogs"}


@app.get("/blog/{id}")
def blog_by_id(id:int):
    return {"data": id}


@app.get("/blog/{id}/comments")
def comments_blog_by_id(id:int, limit:int = 10):
    return {"data": [100,15], "limit": limit}


class Blog(BaseModel):
    title: str
    body: str
    published: Optional[bool]



@app.post("/blog")
def create_blog(blog: Blog):
    return {"data": f"blog created with title as {blog.title}"}


if __name__ == "__main__":
    uvicorn.run(app, host="localhost", port=9000)


